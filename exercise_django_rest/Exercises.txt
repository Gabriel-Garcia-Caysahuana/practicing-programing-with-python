Ejercicio 1: Crear una API de Listado de Libros
Objetivo: Configurar un endpoint básico para listar libros.
Instrucciones:
- Crea un modelo Book con campos como title, author, published_date, y isbn.
- Configura un serializer para este modelo.
- Crea un ViewSet que permita listar todos los libros en una base de datos.
- Agrega una ruta al urls.py usando DefaultRouter.
Resultados esperados: Al acceder al endpoint /books/, deberías ver una lista JSON con los libros almacenados.


Ejercicio 2: API para CRUD de Usuarios
Objetivo: Implementar un CRUD básico para un modelo de usuario.
Instrucciones:
- Usa el modelo de usuario de Django (AbstractUser o uno personalizado).
- Configura serializadores separados para operaciones de creación y actualización (por ejemplo, para manejar contraseñas correctamente).
- Implementa vistas con APIView o ViewSet para operaciones CRUD.
- Configura rutas para las vistas.
Resultados esperados: Los endpoints deben permitirte crear, leer, actualizar y eliminar usuarios desde un cliente como Postman.


Ejercicio 3: Filtros y Paginación
Objetivo: Implementar paginación y filtrado en una API.
Instrucciones:
- Usa el modelo Book del primer ejercicio.
- Configura un endpoint para listar libros que permita:
- Filtrar por author y published_date usando django-filter.
- Paginación básica con PageNumberPagination.
- Añade validaciones para asegurarte de que los filtros devuelvan resultados esperados.
Resultados esperados: Los datos deben estar paginados y filtrarse correctamente según los parámetros enviados en la URL.


Ejercicio 4: Autenticación con Token
Objetivo: Proteger una API con autenticación basada en tokens.
Instrucciones:
- Configura djangorestframework-simplejwt o TokenAuthentication de Django REST.
- Crea un modelo simple, por ejemplo, Task con campos title y completed.
- Crea una vista para CRUD de tareas que solo pueda ser accedida por usuarios autenticados.
- Implementa un endpoint para que los usuarios inicien sesión y obtengan un token.
Resultados esperados: Los usuarios deben autenticarse para acceder a los endpoints protegidos, y las solicitudes no autenticadas deben devolver un error.